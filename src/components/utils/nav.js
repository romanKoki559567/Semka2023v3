import user from "../../images/male.png";
import React from "react";
import axios from "axios";
import { Link, useNavigate } from "react-router-dom";

const Nav = () => {
	const [isMenuOpen, setMenuOpen] = React.useState(true);
	const [isTechnologieOpen, setTechnologieOpen] = React.useState(false); // New state
	const isAuthenticated = !!localStorage.getItem("token");
	const navigate = useNavigate();

	const [values, setValues] = React.useState({
		name: "",
	});

	const toggleTechnologie = () => {
		setTechnologieOpen((prev) => !prev);
	};

	const [errors, setErrors] = React.useState({});

	const [currentlyOpen, setCurrentlyOpen] = React.useState("");

	const handleInput = (event) => {
		setValues((prev) => ({ ...prev, [event.target.name]: [event.target.value] }));
	};

	const toggleMenu = () => {
		if (isMenuOpen) {
			setMenuOpen(false);
		} else {
			setMenuOpen(true);
		}
	};

	const logout = () => {
		localStorage.removeItem("token");
		window.alert("Odhlasene");
		navigate("/login");
	};

	React.useEffect(() => {
		const fetchUserData = async () => {
			try {
				const token = localStorage.getItem("token"); // Assuming you store the token in localStorage during login
				const response = await axios.get("http://localhost:8081/getUserData", {
					headers: {
						Authorization: `${token}`,
					},
				});
				setValues(response.data);
			} catch (error) {
				//console.error("Error fetching user data", error);
			}
		};

		fetchUserData();
	}, []);

	return (
		<>
			<div className="nav-burger">
				<div className="mobile-menu-toggle " onClick={toggleMenu}>
					<span></span>
					<span></span>
					<span></span>
				</div>
			</div>
			<div className={`lavy-nav ${isMenuOpen ? "menu-open" : ""}`}>
				<Link to="/" onClick={() => setCurrentlyOpen("Domov")}>
					<svg width="214" height="54" viewBox="0 0 214 54" fill="none" xmlns="http://www.w3.org/2000/svg">
						<path
							d="M56.1177 38.8625L67.4449 14.0842H70.0289L81.3562 38.8625H78.5952L68.1883 15.6063H69.2502L58.8433 38.8625H56.1177ZM60.5778 32.2432L61.3565 30.1193H75.7634L76.5421 32.2432H60.5778ZM92.5034 39.0395C90.7335 39.0395 89.1406 38.6384 87.7247 37.836C86.3324 37.0337 85.2351 35.9245 84.4327 34.5086C83.6304 33.0691 83.2292 31.4172 83.2292 29.553C83.2292 27.6651 83.6304 26.0132 84.4327 24.5973C85.2351 23.1814 86.3324 22.0841 87.7247 21.3053C89.1406 20.503 90.7335 20.1018 92.5034 20.1018C94.1317 20.1018 95.583 20.4676 96.8573 21.1991C98.1552 21.9307 99.1818 23.0044 99.9369 24.4203C100.716 25.8126 101.105 27.5235 101.105 29.553C101.105 31.5588 100.727 33.2697 99.9723 34.6856C99.2172 36.1015 98.1906 37.1871 96.8927 37.9422C95.6184 38.6738 94.1553 39.0395 92.5034 39.0395ZM92.6804 36.8095C94.0019 36.8095 95.1818 36.5145 96.2202 35.9245C97.2821 35.311 98.108 34.4614 98.698 33.3759C99.3116 32.2668 99.6183 30.9925 99.6183 29.553C99.6183 28.0899 99.3116 26.8155 98.698 25.73C98.108 24.6445 97.2821 23.8067 96.2202 23.2168C95.1818 22.6032 94.0019 22.2964 92.6804 22.2964C91.3825 22.2964 90.2144 22.6032 89.176 23.2168C88.1377 23.8067 87.3118 24.6445 86.6982 25.73C86.0846 26.8155 85.7779 28.0899 85.7779 29.553C85.7779 30.9925 86.0846 32.2668 86.6982 33.3759C87.3118 34.4614 88.1377 35.311 89.176 35.9245C90.2144 36.5145 91.3825 36.8095 92.6804 36.8095ZM99.6891 38.8625V33.2697L99.9369 29.5176L99.5829 25.7654V12.5975H102.096V38.8625H99.6891ZM114.441 39.0395C112.907 39.0395 111.455 38.8272 110.087 38.4024C108.718 37.954 107.644 37.3994 106.865 36.7387L107.998 34.7564C108.753 35.3228 109.721 35.8184 110.901 36.2431C112.081 36.6443 113.32 36.8449 114.618 36.8449C116.387 36.8449 117.662 36.5735 118.44 36.0307C119.219 35.4644 119.609 34.721 119.609 33.8007C119.609 33.1163 119.384 32.5854 118.936 32.2078C118.511 31.8066 117.945 31.5116 117.237 31.3228C116.529 31.1105 115.738 30.9335 114.865 30.7919C113.992 30.6503 113.119 30.4851 112.246 30.2963C111.396 30.1075 110.618 29.8361 109.91 29.4822C109.202 29.1046 108.624 28.5972 108.175 27.9601C107.75 27.3229 107.538 26.4734 107.538 25.4114C107.538 24.3967 107.821 23.4882 108.388 22.6858C108.954 21.8835 109.78 21.2581 110.865 20.8097C111.975 20.3378 113.32 20.1018 114.901 20.1018C116.104 20.1018 117.308 20.267 118.511 20.5974C119.715 20.9041 120.706 21.3171 121.485 21.8363L120.387 23.8539C119.561 23.2876 118.676 22.8864 117.733 22.6504C116.789 22.3908 115.845 22.2611 114.901 22.2611C113.225 22.2611 111.986 22.556 111.184 23.146C110.405 23.7124 110.016 24.4439 110.016 25.3406C110.016 26.0486 110.228 26.6032 110.653 27.0043C111.101 27.4055 111.68 27.7241 112.387 27.9601C113.119 28.1725 113.91 28.3494 114.759 28.491C115.632 28.6326 116.494 28.8096 117.343 29.022C118.216 29.2108 119.007 29.4822 119.715 29.8361C120.446 30.1665 121.025 30.6503 121.449 31.2875C121.898 31.901 122.122 32.7152 122.122 33.7299C122.122 34.8154 121.815 35.7594 121.202 36.5617C120.612 37.3404 119.738 37.954 118.582 38.4024C117.449 38.8272 116.069 39.0395 114.441 39.0395ZM126.132 38.8625V12.5975H131.654V38.8625H126.132ZM137.133 38.8625V19.8186H142.655V38.8625H137.133ZM139.894 17.1638C138.879 17.1638 138.053 16.8688 137.416 16.2788C136.779 15.6889 136.46 14.9573 136.46 14.0842C136.46 13.2111 136.779 12.4795 137.416 11.8895C138.053 11.2996 138.879 11.0046 139.894 11.0046C140.908 11.0046 141.734 11.2878 142.372 11.8541C143.009 12.3969 143.327 13.1049 143.327 13.978C143.327 14.8983 143.009 15.6653 142.372 16.2788C141.758 16.8688 140.932 17.1638 139.894 17.1638ZM155.921 39.1457C153.679 39.1457 151.933 38.5794 150.682 37.4466C149.431 36.2903 148.806 34.5794 148.806 32.314V15.6063H154.328V32.2432C154.328 33.0455 154.541 33.6709 154.965 34.1193C155.39 34.544 155.968 34.7564 156.7 34.7564C157.573 34.7564 158.316 34.5204 158.93 34.0485L160.417 37.9422C159.85 38.3434 159.166 38.6502 158.363 38.8625C157.585 39.0513 156.771 39.1457 155.921 39.1457ZM145.868 24.4911V20.2434H159.071V24.4911H145.868ZM163.87 38.8625V19.8186H169.392V38.8625H163.87ZM166.631 17.1638C165.617 17.1638 164.791 16.8688 164.154 16.2788C163.516 15.6889 163.198 14.9573 163.198 14.0842C163.198 13.2111 163.516 12.4795 164.154 11.8895C164.791 11.2996 165.617 11.0046 166.631 11.0046C167.646 11.0046 168.472 11.2878 169.109 11.8541C169.746 12.3969 170.065 13.1049 170.065 13.978C170.065 14.8983 169.746 15.6653 169.109 16.2788C168.496 16.8688 167.67 17.1638 166.631 17.1638ZM184.075 39.1457C182.022 39.1457 180.193 38.7328 178.588 37.9068C176.983 37.0573 175.721 35.8891 174.8 34.4024C173.904 32.9157 173.455 31.2285 173.455 29.3406C173.455 27.4291 173.904 25.7418 174.8 24.2787C175.721 22.792 176.983 21.6357 178.588 20.8097C180.193 19.9602 182.022 19.5354 184.075 19.5354C186.081 19.5354 187.827 19.9602 189.313 20.8097C190.8 21.6357 191.898 22.8274 192.605 24.3849L188.322 26.6858C187.827 25.789 187.201 25.1283 186.446 24.7035C185.715 24.2787 184.912 24.0663 184.039 24.0663C183.095 24.0663 182.246 24.2787 181.491 24.7035C180.735 25.1283 180.134 25.73 179.685 26.5088C179.261 27.2875 179.048 28.2315 179.048 29.3406C179.048 30.4497 179.261 31.3936 179.685 32.1724C180.134 32.9511 180.735 33.5529 181.491 33.9777C182.246 34.4024 183.095 34.6148 184.039 34.6148C184.912 34.6148 185.715 34.4142 186.446 34.0131C187.201 33.5883 187.827 32.9157 188.322 31.9954L192.605 34.3316C191.898 35.8655 190.8 37.0573 189.313 37.9068C187.827 38.7328 186.081 39.1457 184.075 39.1457ZM202.546 39.1457C200.918 39.1457 199.348 38.9569 197.838 38.5794C196.351 38.1782 195.171 37.6826 194.298 37.0927L196.139 33.1281C197.012 33.6709 198.039 34.1193 199.218 34.4732C200.422 34.8036 201.602 34.9688 202.758 34.9688C204.033 34.9688 204.929 34.8154 205.448 34.5086C205.991 34.2019 206.263 33.7771 206.263 33.2343C206.263 32.786 206.05 32.4556 205.625 32.2432C205.224 32.0072 204.682 31.8302 203.997 31.7122C203.313 31.5942 202.558 31.4762 201.732 31.3582C200.929 31.2403 200.115 31.0869 199.289 30.8981C198.463 30.6857 197.708 30.3789 197.024 29.9777C196.339 29.5766 195.785 29.0338 195.36 28.3494C194.959 27.6651 194.758 26.7802 194.758 25.6946C194.758 24.4911 195.101 23.4292 195.785 22.5088C196.493 21.5885 197.508 20.8687 198.829 20.3496C200.151 19.8068 201.732 19.5354 203.572 19.5354C204.87 19.5354 206.192 19.677 207.537 19.9602C208.882 20.2434 210.003 20.6564 210.9 21.1991L209.059 25.1283C208.139 24.5855 207.207 24.2197 206.263 24.0309C205.342 23.8185 204.446 23.7124 203.572 23.7124C202.345 23.7124 201.449 23.8775 200.882 24.2079C200.316 24.5383 200.033 24.9631 200.033 25.4822C200.033 25.9542 200.233 26.3082 200.634 26.5442C201.059 26.7802 201.614 26.9689 202.298 27.1105C202.982 27.2521 203.726 27.3819 204.528 27.4999C205.354 27.5943 206.18 27.7477 207.006 27.9601C207.832 28.1725 208.575 28.4792 209.236 28.8804C209.92 29.258 210.475 29.789 210.9 30.4733C211.324 31.1341 211.537 32.0072 211.537 33.0927C211.537 34.2727 211.183 35.3228 210.475 36.2431C209.767 37.1399 208.74 37.8478 207.395 38.367C206.074 38.8861 204.457 39.1457 202.546 39.1457Z"
							fill="#001EC0"
						/>
						<path
							d="M23.8605 0L43.5905 35.3063C44.8099 37.4884 42.4402 39.9183 40.2282 38.7541L23.8605 30.1395L7.49277 38.7541C5.28075 39.9183 2.91107 37.4884 4.13047 35.3063L23.8605 0Z"
							fill="#95D5FA"
						/>
						<path
							d="M23.8605 11.3022L43.5905 46.6086C44.8099 48.7906 42.4402 51.2206 40.2282 50.0564L23.8605 41.4418L7.49277 50.0564C5.28075 51.2206 2.91107 48.7906 4.13047 46.6086L23.8605 11.3022Z"
							fill="url(#paint0_linear_810_153)"
						/>
						<defs>
							<linearGradient id="paint0_linear_810_153" x1="23.8605" y1="51.4883" x2="23.8605" y2="15.0697" gradientUnits="userSpaceOnUse">
								<stop stopColor="#1A2B88" />
								<stop offset="1" stopColor="#1A2B88" stop-opacity="0" />
							</linearGradient>
						</defs>
					</svg>
				</Link>

				<div className={`menu-container ${isMenuOpen ? "show" : ""}`}>
					<Link className="link" to="/" onClick={() => setCurrentlyOpen("Domov")}>
						<div className="nav-button">
							<svg width="26" height="26" viewBox="0 0 26 26" fill="none" xmlns="http://www.w3.org/2000/svg">
								<path
									d="M22.316 14.8077H17.5302C15.1491 14.8077 14 13.706 14 11.4315V3.37615C14 1.10169 15.1609 0 17.5302 0H22.316C24.6971 0 25.8462 1.10169 25.8462 3.37615V11.4315C25.8462 13.706 24.6852 14.8077 22.316 14.8077ZM17.5302 1.77692C16.0257 1.77692 15.7769 2.17969 15.7769 3.37615V11.4315C15.7769 12.628 16.0257 13.0308 17.5302 13.0308H22.316C23.8205 13.0308 24.0692 12.628 24.0692 11.4315V3.37615C24.0692 2.17969 23.8205 1.77692 22.316 1.77692H17.5302Z"
									fill="#555555"
								/>
								<path
									d="M22.316 25.8846H17.5302C15.1491 25.8846 14 24.7829 14 22.5085V20.3762C14 18.1017 15.1609 17 17.5302 17H22.316C24.6971 17 25.8462 18.1017 25.8462 20.3762V22.5085C25.8462 24.7829 24.6852 25.8846 22.316 25.8846ZM17.5302 18.7769C16.0257 18.7769 15.7769 19.1797 15.7769 20.3762V22.5085C15.7769 23.7049 16.0257 24.1077 17.5302 24.1077H22.316C23.8205 24.1077 24.0692 23.7049 24.0692 22.5085V20.3762C24.0692 19.1797 23.8205 18.7769 22.316 18.7769H17.5302Z"
									fill="#555555"
								/>
								<path
									d="M8.424 26H3.576C1.164 26 0 24.8753 0 22.5535V3.44651C0 1.12465 1.176 0 3.576 0H8.424C10.836 0 12 1.12465 12 3.44651V22.5535C12 24.8753 10.824 26 8.424 26ZM3.576 1.81395C2.052 1.81395 1.8 2.22512 1.8 3.44651V22.5535C1.8 23.7749 2.052 24.186 3.576 24.186H8.424C9.948 24.186 10.2 23.7749 10.2 22.5535V3.44651C10.2 2.22512 9.948 1.81395 8.424 1.81395H3.576Z"
									fill="#555555"
								/>
							</svg>

							<span>Domov</span>
						</div>
					</Link>

					<Link className="link" to="" onClick={toggleTechnologie}>
						<div className="nav-button">
							<svg width="29" height="30" viewBox="0 0 29 30" fill="none" xmlns="http://www.w3.org/2000/svg">
								<path
									d="M7.12917 20.9733H21.8588C24.1546 20.9733 25.3629 19.7649 25.3629 17.4691V2.84827H3.61292V17.4691C3.625 19.7649 4.83334 20.9733 7.12917 20.9733Z"
									stroke="#555555"
									stroke-width="1.8125"
									stroke-miterlimit="10"
									stroke-linecap="round"
									stroke-linejoin="round"
								/>
								<path
									d="M2.41736 2.84827H26.584"
									stroke="#555555"
									stroke-width="1.8125"
									stroke-miterlimit="10"
									stroke-linecap="round"
									stroke-linejoin="round"
								/>
								<path
									d="M9.66736 27.0149L14.5007 24.5983V20.9733"
									stroke="#555555"
									stroke-width="1.8125"
									stroke-miterlimit="10"
									stroke-linecap="round"
									stroke-linejoin="round"
								/>
								<path
									d="M19.3333 27.0149L14.5 24.5983"
									stroke="#555555"
									stroke-width="1.8125"
									stroke-miterlimit="10"
									stroke-linecap="round"
									stroke-linejoin="round"
								/>
								<path
									d="M9.0625 13.7233L12.8687 10.5453C13.1708 10.2916 13.5696 10.3641 13.775 10.7024L15.225 13.1191C15.4304 13.4574 15.8292 13.5179 16.1313 13.2762L19.9375 10.0983"
									stroke="#555555"
									stroke-width="1.8125"
									stroke-miterlimit="10"
									stroke-linecap="round"
									stroke-linejoin="round"
								/>
							</svg>

							<span>Technologie</span>
						</div>
					</Link>

					{isTechnologieOpen && (
						<div className="card-menu">
							<ul>
								<li className="">
									<Link to="/zakl-pojmy" onClick={() => setCurrentlyOpen("#")} className="text-decoration-none">
										<p>Základné štatistické pojmy</p>
									</Link>
								</li>
								<li>
									<Link to="/roz-pravd" onClick={() => setCurrentlyOpen("#")} className="text-decoration-none">
										<p>Rozdelenie Pravdepodobnosti</p>
									</Link>
								</li>
								<li>
									<Link to="/o-mne" onClick={() => setCurrentlyOpen("#")} className="text-decoration-none">
										<p>Machine learning</p>
									</Link>
								</li>
							</ul>
						</div>
					)}

					<Link className="link" to="/o-mne" onClick={() => setCurrentlyOpen("o-mne")}>
						<div className="nav-button">
							<svg width="28" height="29" viewBox="0 0 28 29" fill="none" xmlns="http://www.w3.org/2000/svg">
								<path
									d="M19.8334 24.9309H8.16671C3.50004 24.9309 2.33337 23.7642 2.33337 19.0976V9.76424C2.33337 5.09757 3.50004 3.93091 8.16671 3.93091H19.8334C24.5 3.93091 25.6667 5.09757 25.6667 9.76424V19.0976C25.6667 23.7642 24.5 24.9309 19.8334 24.9309Z"
									stroke="#555555"
									stroke-width="1.75"
									stroke-linecap="round"
									stroke-linejoin="round"
								/>
								<path d="M16.3334 9.76428H22.1667" stroke="#555555" stroke-width="1.75" stroke-linecap="round" stroke-linejoin="round" />
								<path d="M17.5 14.4309H22.1667" stroke="#555555" stroke-width="1.75" stroke-linecap="round" stroke-linejoin="round" />
								<path d="M19.8334 19.0975H22.1667" stroke="#555555" stroke-width="1.75" stroke-linecap="round" stroke-linejoin="round" />
								<path
									d="M9.91721 13.6025C11.0835 13.6025 12.0289 12.6571 12.0289 11.4908C12.0289 10.3246 11.0835 9.37915 9.91721 9.37915C8.75097 9.37915 7.80554 10.3246 7.80554 11.4908C7.80554 12.6571 8.75097 13.6025 9.91721 13.6025Z"
									stroke="#555555"
									stroke-width="1.75"
									stroke-linecap="round"
									stroke-linejoin="round"
								/>
								<path
									d="M14 19.4823C13.8367 17.7907 12.495 16.4607 10.8034 16.309C10.22 16.2507 9.62504 16.2507 9.03004 16.309C7.33837 16.4723 5.99671 17.7907 5.83337 19.4823"
									stroke="#555555"
									stroke-width="1.75"
									stroke-linecap="round"
									stroke-linejoin="round"
								/>
							</svg>

							<span>O mne</span>
						</div>
					</Link>
					{isAuthenticated ? (
						<Link className="link" to="/nastavenia-uctu" onClick={() => setCurrentlyOpen("nastavenia-uctu")}>
							<div className="nav-button">
								<svg width="28" height="28" viewBox="0 0 28 28" fill="none" xmlns="http://www.w3.org/2000/svg">
									<path
										d="M13.551 18.3183C11.2134 18.3183 9.31628 16.4212 9.31628 14.0837C9.31628 11.7461 11.2134 9.849 13.551 9.849C15.8885 9.849 17.7856 11.7461 17.7856 14.0837C17.7856 16.4212 15.8885 18.3183 13.551 18.3183ZM13.551 11.5429C12.1507 11.5429 11.0102 12.6834 11.0102 14.0837C11.0102 15.4839 12.1507 16.6245 13.551 16.6245C14.9512 16.6245 16.0918 15.4839 16.0918 14.0837C16.0918 12.6834 14.9512 11.5429 13.551 11.5429Z"
										fill="#555555"
									/>
									<path
										d="M17.1758 25.5908C16.9386 25.5908 16.7015 25.5569 16.4643 25.5004C15.7642 25.3084 15.177 24.868 14.8044 24.247L14.6688 24.0211C14.0026 22.8693 13.0879 22.8693 12.4216 24.0211L12.2974 24.2357C11.9248 24.868 11.3376 25.3197 10.6374 25.5004C9.92601 25.6924 9.192 25.5908 8.57092 25.2181L6.62862 24.1002C5.93978 23.7049 5.44291 23.0612 5.22835 22.2821C5.02509 21.5029 5.12672 20.7011 5.52195 20.0123C5.84944 19.4364 5.93978 18.9169 5.7478 18.5894C5.55583 18.262 5.07026 18.07 4.404 18.07C2.7553 18.07 1.4115 16.7262 1.4115 15.0775V13.09C1.4115 11.4413 2.7553 10.0975 4.404 10.0975C5.07026 10.0975 5.55583 9.90553 5.7478 9.57805C5.93978 9.25057 5.86073 8.73111 5.52195 8.1552C5.12672 7.46636 5.02509 6.6533 5.22835 5.88541C5.43161 5.10623 5.92848 4.46256 6.62862 4.06733L8.58221 2.94938C9.85826 2.19278 11.5408 2.63319 12.3087 3.93182L12.4442 4.15767C13.1105 5.3095 14.0252 5.3095 14.6914 4.15767L14.8156 3.94311C15.5835 2.63319 17.2661 2.19278 18.5535 2.96067L20.4958 4.07862C21.1846 4.47386 21.6815 5.11753 21.896 5.89671C22.0993 6.67589 21.9977 7.47765 21.6024 8.16649C21.2749 8.74241 21.1846 9.26186 21.3766 9.58934C21.5685 9.91682 22.0541 10.1088 22.7204 10.1088C24.3691 10.1088 25.7129 11.4526 25.7129 13.1013V15.0888C25.7129 16.7375 24.3691 18.0813 22.7204 18.0813C22.0541 18.0813 21.5685 18.2732 21.3766 18.6007C21.1846 18.9282 21.2636 19.4477 21.6024 20.0236C21.9977 20.7124 22.1106 21.5255 21.896 22.2934C21.6928 23.0725 21.1959 23.7162 20.4958 24.1114L18.5422 25.2294C18.113 25.4665 17.6501 25.5908 17.1758 25.5908ZM13.5509 21.4125C14.5559 21.4125 15.4932 22.0449 16.1369 23.1629L16.2611 23.3774C16.3966 23.6146 16.6224 23.784 16.8935 23.8517C17.1645 23.9195 17.4355 23.8856 17.6614 23.7501L19.6149 22.6208C19.9086 22.4515 20.1344 22.1691 20.2247 21.8304C20.3151 21.4916 20.2699 21.1415 20.1005 20.8479C19.4569 19.7413 19.3778 18.6007 19.8747 17.7312C20.3715 16.8617 21.3992 16.3648 22.6865 16.3648C23.4092 16.3648 23.9851 15.7889 23.9851 15.0662V13.0787C23.9851 12.3673 23.4092 11.7801 22.6865 11.7801C21.3992 11.7801 20.3715 11.2832 19.8747 10.4137C19.3778 9.54417 19.4569 8.40363 20.1005 7.29697C20.2699 7.00337 20.3151 6.6533 20.2247 6.31453C20.1344 5.97575 19.9198 5.70474 19.6262 5.52406L17.6726 4.4061C17.1871 4.1125 16.5434 4.28189 16.2498 4.77875L16.1256 4.99331C15.4819 6.11126 14.5446 6.74364 13.5396 6.74364C12.5346 6.74364 11.5973 6.11126 10.9536 4.99331L10.8294 4.76746C10.5471 4.29318 9.91472 4.12379 9.42915 4.4061L7.47555 5.53535C7.18195 5.70474 6.9561 5.98705 6.86576 6.32582C6.77542 6.66459 6.82059 7.01466 6.98997 7.30826C7.63364 8.41493 7.71269 9.55546 7.21582 10.425C6.71896 11.2945 5.69134 11.7914 4.404 11.7914C3.68128 11.7914 3.10537 12.3673 3.10537 13.09V15.0775C3.10537 15.7889 3.68128 16.3761 4.404 16.3761C5.69134 16.3761 6.71896 16.873 7.21582 17.7425C7.71269 18.612 7.63364 19.7526 6.98997 20.8592C6.82059 21.1528 6.77542 21.5029 6.86576 21.8417C6.9561 22.1804 7.17065 22.4515 7.46426 22.6321L9.41785 23.7501C9.65499 23.8969 9.93731 23.9308 10.197 23.863C10.4681 23.7953 10.6939 23.6146 10.8407 23.3774L10.9649 23.1629C11.6086 22.0562 12.5459 21.4125 13.5509 21.4125Z"
										fill="#555555"
									/>
								</svg>

								<span>Nastavenia</span>
							</div>
						</Link>
					) : null}
					<div className="nav-line"></div>

					<Link className="link" to="/projekty" onClick={() => setCurrentlyOpen("projekty")}>
						<div className="nav-button">
							<svg width="28" height="28" viewBox="0 0 28 28" fill="none" xmlns="http://www.w3.org/2000/svg">
								<path
									d="M22.0187 8.89214H18.2078V5.92808C18.2078 4.69275 17.7171 3.50801 16.8435 2.63451C15.97 1.761 14.7853 1.27026 13.55 1.27026C12.3146 1.27026 11.1299 1.761 10.2564 2.63451C9.3829 3.50801 8.89216 4.69275 8.89216 5.92808V8.89214H5.08123C4.74432 8.89214 4.42121 9.02598 4.18298 9.2642C3.94475 9.50243 3.81091 9.82554 3.81091 10.1625V22.0187C3.81091 22.3556 3.94475 22.6787 4.18298 22.9169C4.42121 23.1552 4.74432 23.289 5.08123 23.289H22.0187C22.3556 23.289 22.6787 23.1552 22.917 22.9169C23.1552 22.6787 23.289 22.3556 23.289 22.0187V10.1625C23.289 9.82554 23.1552 9.50243 22.917 9.2642C22.6787 9.02598 22.3556 8.89214 22.0187 8.89214ZM9.73904 5.92808C9.73904 4.91735 10.1405 3.94803 10.8552 3.23334C11.5699 2.51865 12.5393 2.11714 13.55 2.11714C14.5607 2.11714 15.53 2.51865 16.2447 3.23334C16.9594 3.94803 17.3609 4.91735 17.3609 5.92808V8.89214H9.73904V5.92808ZM22.4422 22.0187C22.4422 22.131 22.3976 22.2387 22.3181 22.3181C22.2387 22.3975 22.131 22.4421 22.0187 22.4421H5.08123C4.96892 22.4421 4.86122 22.3975 4.78181 22.3181C4.7024 22.2387 4.65779 22.131 4.65779 22.0187V10.1625C4.65779 10.0501 4.7024 9.94245 4.78181 9.86304C4.86122 9.78363 4.96892 9.73901 5.08123 9.73901H22.0187C22.131 9.73901 22.2387 9.78363 22.3181 9.86304C22.3976 9.94245 22.4422 10.0501 22.4422 10.1625V22.0187ZM14.3969 16.0906C14.3969 16.2581 14.3472 16.4218 14.2541 16.5611C14.1611 16.7003 14.0288 16.8089 13.8741 16.873C13.7193 16.9371 13.549 16.9539 13.3848 16.9212C13.2205 16.8885 13.0696 16.8078 12.9511 16.6894C12.8327 16.571 12.7521 16.4201 12.7194 16.2558C12.6867 16.0915 12.7035 15.9212 12.7676 15.7665C12.8317 15.6117 12.9402 15.4795 13.0795 15.3864C13.2187 15.2934 13.3825 15.2437 13.55 15.2437C13.7746 15.2437 13.99 15.3329 14.1488 15.4917C14.3076 15.6506 14.3969 15.866 14.3969 16.0906Z"
									fill="#555555"
								/>
							</svg>

							<span>Projekty</span>
						</div>
					</Link>
				</div>
				<Link className="user-button" to={isAuthenticated ? "/" : "/login"} onClick={() => setCurrentlyOpen("projekty")}>
					<div className="user-button" onClick={isAuthenticated ? logout : null}>
						<img src={user} alt="lock" width={50} height={50} />
						<span>{isAuthenticated ? "Odhlasit" : "Prihlasit"}</span>
						<span>{isAuthenticated ? "(" + values.name + ")" : ""}</span>
						{errors.name && <span className="text-danger">{errors.name}</span>}
					</div>
				</Link>
			</div>
		</>
	);
};

export default Nav;
